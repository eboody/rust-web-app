//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "directus_permissions")]
pub struct Model {
	#[sea_orm(primary_key)]
	pub id: i32,
	pub collection: String,
	pub action: String,
	pub permissions: Option<Json>,
	pub validation: Option<Json>,
	pub presets: Option<Json>,
	#[sea_orm(column_type = "Text", nullable)]
	pub fields: Option<String>,
	pub policy: Uuid,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
	#[sea_orm(
		belongs_to = "super::directus_policies::Entity",
		from = "Column::Policy",
		to = "super::directus_policies::Column::Id",
		on_update = "NoAction",
		on_delete = "Cascade"
	)]
	DirectusPolicies,
}

impl Related<super::directus_policies::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::DirectusPolicies.def()
	}
}

impl ActiveModelBehavior for ActiveModel {}
