//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "directus_policies")]
pub struct Model {
	#[sea_orm(primary_key, auto_increment = false)]
	pub id: Uuid,
	pub name: String,
	pub icon: String,
	#[sea_orm(column_type = "Text", nullable)]
	pub description: Option<String>,
	#[sea_orm(column_type = "Text", nullable)]
	pub ip_access: Option<String>,
	pub enforce_tfa: bool,
	pub admin_access: bool,
	pub app_access: bool,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
	#[sea_orm(has_many = "super::directus_access::Entity")]
	DirectusAccess,
	#[sea_orm(has_many = "super::directus_permissions::Entity")]
	DirectusPermissions,
}

impl Related<super::directus_access::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::DirectusAccess.def()
	}
}

impl Related<super::directus_permissions::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::DirectusPermissions.def()
	}
}

impl ActiveModelBehavior for ActiveModel {}
