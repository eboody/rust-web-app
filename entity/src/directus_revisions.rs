//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "directus_revisions")]
pub struct Model {
	#[sea_orm(primary_key)]
	pub id: i32,
	pub activity: i32,
	pub collection: String,
	pub item: String,
	pub data: Option<Json>,
	pub delta: Option<Json>,
	pub parent: Option<i32>,
	pub version: Option<Uuid>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
	#[sea_orm(
		belongs_to = "super::directus_activity::Entity",
		from = "Column::Activity",
		to = "super::directus_activity::Column::Id",
		on_update = "NoAction",
		on_delete = "Cascade"
	)]
	DirectusActivity,
	#[sea_orm(
		belongs_to = "Entity",
		from = "Column::Parent",
		to = "Column::Id",
		on_update = "NoAction",
		on_delete = "NoAction"
	)]
	SelfRef,
	#[sea_orm(
		belongs_to = "super::directus_versions::Entity",
		from = "Column::Version",
		to = "super::directus_versions::Column::Id",
		on_update = "NoAction",
		on_delete = "Cascade"
	)]
	DirectusVersions,
}

impl Related<super::directus_activity::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::DirectusActivity.def()
	}
}

impl Related<super::directus_versions::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::DirectusVersions.def()
	}
}

impl ActiveModelBehavior for ActiveModel {}
