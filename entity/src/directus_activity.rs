//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "directus_activity")]
pub struct Model {
	#[sea_orm(primary_key)]
	pub id: i32,
	pub action: String,
	pub user: Option<Uuid>,
	pub timestamp: DateTimeWithTimeZone,
	pub ip: Option<String>,
	#[sea_orm(column_type = "Text", nullable)]
	pub user_agent: Option<String>,
	pub collection: String,
	pub item: String,
	#[sea_orm(column_type = "Text", nullable)]
	pub comment: Option<String>,
	pub origin: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
	#[sea_orm(has_many = "super::directus_revisions::Entity")]
	DirectusRevisions,
}

impl Related<super::directus_revisions::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::DirectusRevisions.def()
	}
}

impl ActiveModelBehavior for ActiveModel {}
