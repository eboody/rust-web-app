//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "directus_fields")]
pub struct Model {
	#[sea_orm(primary_key)]
	pub id: i32,
	pub collection: String,
	pub field: String,
	pub special: Option<String>,
	pub interface: Option<String>,
	pub options: Option<Json>,
	pub display: Option<String>,
	pub display_options: Option<Json>,
	pub readonly: bool,
	pub hidden: bool,
	pub sort: Option<i32>,
	pub width: Option<String>,
	pub translations: Option<Json>,
	#[sea_orm(column_type = "Text", nullable)]
	pub note: Option<String>,
	pub conditions: Option<Json>,
	pub required: Option<bool>,
	pub group: Option<String>,
	pub validation: Option<Json>,
	#[sea_orm(column_type = "Text", nullable)]
	pub validation_message: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
