//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "languages")]
pub struct Model {
	#[sea_orm(primary_key, auto_increment = false)]
	pub code: String,
	pub name: Option<String>,
	pub direction: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
	#[sea_orm(has_many = "super::articles_translations::Entity")]
	ArticlesTranslations,
	#[sea_orm(has_many = "super::ebooks_translations::Entity")]
	EbooksTranslations,
}

impl Related<super::articles_translations::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::ArticlesTranslations.def()
	}
}

impl Related<super::ebooks_translations::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::EbooksTranslations.def()
	}
}

impl ActiveModelBehavior for ActiveModel {}
