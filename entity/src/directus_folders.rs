//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "directus_folders")]
pub struct Model {
	#[sea_orm(primary_key, auto_increment = false)]
	pub id: Uuid,
	pub name: String,
	pub parent: Option<Uuid>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
	#[sea_orm(has_many = "super::directus_files::Entity")]
	DirectusFiles,
	#[sea_orm(
		belongs_to = "Entity",
		from = "Column::Parent",
		to = "Column::Id",
		on_update = "NoAction",
		on_delete = "NoAction"
	)]
	SelfRef,
	#[sea_orm(has_many = "super::directus_settings::Entity")]
	DirectusSettings,
}

impl Related<super::directus_files::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::DirectusFiles.def()
	}
}

impl Related<super::directus_settings::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::DirectusSettings.def()
	}
}

impl ActiveModelBehavior for ActiveModel {}
