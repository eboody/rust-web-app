/*
 * Dynamic API Specification
 *
 * This is a dynamically generated API specification for all endpoints existing on the current project.
 *
 * The version of the OpenAPI document: 11.2.2
 *
 * Generated by: https://openapi-generator.tech
 */


use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct LogoutRequest {
	/// The refresh token to invalidate. If you have the refresh token in a cookie through /auth/login, you don't have to submit it here.
	#[serde(rename = "refresh_token", skip_serializing_if = "Option::is_none")]
	pub refresh_token: Option<String>,
	/// Whether the refresh token is submitted in the JSON response, or in a httpOnly cookie.
	#[serde(rename = "mode", skip_serializing_if = "Option::is_none")]
	pub mode: Option<Mode>,
}

impl LogoutRequest {
	pub fn new() -> LogoutRequest {
		LogoutRequest {
			refresh_token: None,
			mode: None,
		}
	}
}
/// Whether the refresh token is submitted in the JSON response, or in a httpOnly cookie.
#[derive(
	Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize,
)]
pub enum Mode {
	#[serde(rename = "json")]
	Json,
	#[serde(rename = "cookie")]
	Cookie,
	#[serde(rename = "session")]
	Session,
}

impl Default for Mode {
	fn default() -> Mode {
		Self::Json
	}
}
