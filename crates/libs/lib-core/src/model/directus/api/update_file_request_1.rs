/*
 * Dynamic API Specification
 *
 * This is a dynamically generated API specification for all endpoints existing on the current project.
 *
 * The version of the OpenAPI document: 11.2.2
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UpdateFileRequest1 {
	/// Title for the file. Is extracted from the filename on upload, but can be edited by the user.
	#[serde(rename = "title", skip_serializing_if = "Option::is_none")]
	pub title: Option<String>,
	/// Preferred filename when file is downloaded.
	#[serde(rename = "filename_download", skip_serializing_if = "Option::is_none")]
	pub filename_download: Option<String>,
	/// Description for the file.
	#[serde(
		rename = "description",
		default,
		with = "::serde_with::rust::double_option",
		skip_serializing_if = "Option::is_none"
	)]
	pub description: Option<Option<String>>,
	#[serde(
		rename = "folder",
		default,
		with = "::serde_with::rust::double_option",
		skip_serializing_if = "Option::is_none"
	)]
	pub folder: Option<Option<Box<super::UpdateFileRequestFolder>>>,
	/// Tags for the file. Is automatically populated based on Exif data for images.
	#[serde(
		rename = "tags",
		default,
		with = "::serde_with::rust::double_option",
		skip_serializing_if = "Option::is_none"
	)]
	pub tags: Option<Option<Vec<String>>>,
}

impl UpdateFileRequest1 {
	pub fn new() -> UpdateFileRequest1 {
		UpdateFileRequest1 {
			title: None,
			filename_download: None,
			description: None,
			folder: None,
			tags: None,
		}
	}
}
