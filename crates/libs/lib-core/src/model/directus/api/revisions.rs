/*
 * Dynamic API Specification
 *
 * This is a dynamically generated API specification for all endpoints existing on the current project.
 *
 * The version of the OpenAPI document: 11.2.2
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Revisions {
	/// Unique identifier for the revision.
	#[serde(rename = "id", skip_serializing_if = "Option::is_none")]
	pub id: Option<i32>,
	#[serde(rename = "activity", skip_serializing_if = "Option::is_none")]
	pub activity: Option<Box<super::RevisionsActivity>>,
	#[serde(rename = "collection", skip_serializing_if = "Option::is_none")]
	pub collection: Option<Box<super::RevisionsCollection>>,
	/// Primary key of updated item.
	#[serde(rename = "item", skip_serializing_if = "Option::is_none")]
	pub item: Option<String>,
	/// Copy of item state at time of update.
	#[serde(
		rename = "data",
		default,
		with = "::serde_with::rust::double_option",
		skip_serializing_if = "Option::is_none"
	)]
	pub data: Option<Option<json::Value>>,
	/// Changes between the previous and the current revision.
	#[serde(rename = "delta", skip_serializing_if = "Option::is_none")]
	pub delta: Option<json::Value>,
	/// If the current item was updated relationally, this is the id of the parent revision record
	#[serde(
		rename = "parent",
		default,
		with = "::serde_with::rust::double_option",
		skip_serializing_if = "Option::is_none"
	)]
	pub parent: Option<Option<i32>>,
	#[serde(rename = "version", skip_serializing_if = "Option::is_none")]
	pub version: Option<Box<super::RevisionsVersion>>,
}

impl Revisions {
	pub fn new() -> Revisions {
		Revisions {
			id: None,
			activity: None,
			collection: None,
			item: None,
			data: None,
			delta: None,
			parent: None,
			version: None,
		}
	}
}
