/*
 * Dynamic API Specification
 *
 * This is a dynamically generated API specification for all endpoints existing on the current project.
 *
 * The version of the OpenAPI document: 11.2.2
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Permissions {
	/// Unique identifier for the permission.
	#[serde(rename = "id", skip_serializing_if = "Option::is_none")]
	pub id: Option<i32>,
	/// What collection this permission applies to.
	#[serde(rename = "collection", skip_serializing_if = "Option::is_none")]
	pub collection: Option<String>,
	/// What action this permission applies to.
	#[serde(rename = "action", skip_serializing_if = "Option::is_none")]
	pub action: Option<Action>,
	/// JSON structure containing the permissions checks for this permission.
	#[serde(
		rename = "permissions",
		default,
		with = "::serde_with::rust::double_option",
		skip_serializing_if = "Option::is_none"
	)]
	pub permissions: Option<Option<json::Value>>,
	/// JSON structure containing the validation checks for this permission.
	#[serde(
		rename = "validation",
		default,
		with = "::serde_with::rust::double_option",
		skip_serializing_if = "Option::is_none"
	)]
	pub validation: Option<Option<json::Value>>,
	/// JSON structure containing the preset value for created/updated items.
	#[serde(
		rename = "presets",
		default,
		with = "::serde_with::rust::double_option",
		skip_serializing_if = "Option::is_none"
	)]
	pub presets: Option<Option<json::Value>>,
	/// CSV of fields that the user is allowed to interact with.
	#[serde(
		rename = "fields",
		default,
		with = "::serde_with::rust::double_option",
		skip_serializing_if = "Option::is_none"
	)]
	pub fields: Option<Option<Vec<String>>>,
	#[serde(
		rename = "policy",
		default,
		with = "::serde_with::rust::double_option",
		skip_serializing_if = "Option::is_none"
	)]
	pub policy: Option<Option<json::Value>>,
}

impl Permissions {
	pub fn new() -> Permissions {
		Permissions {
			id: None,
			collection: None,
			action: None,
			permissions: None,
			validation: None,
			presets: None,
			fields: None,
			policy: None,
		}
	}
}
/// What action this permission applies to.
#[derive(
	Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize,
)]
pub enum Action {
	#[serde(rename = "create")]
	Create,
	#[serde(rename = "read")]
	Read,
	#[serde(rename = "update")]
	Update,
	#[serde(rename = "delete")]
	Delete,
}

impl Default for Action {
	fn default() -> Action {
		Self::Create
	}
}
