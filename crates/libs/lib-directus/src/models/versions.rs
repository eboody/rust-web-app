/*
 * Dynamic API Specification
 *
 * This is a dynamically generated API specification for all endpoints existing on the current project.
 *
 * The version of the OpenAPI document: 11.2.2
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Versions {
	/// Primary key of the Content Version.
	#[serde(rename = "id", skip_serializing_if = "Option::is_none")]
	pub id: Option<String>,
	/// Key of the Content Version, used as the value for the \"version\" query parameter.
	#[serde(rename = "key", skip_serializing_if = "Option::is_none")]
	pub key: Option<String>,
	/// Descriptive name of the Content Version.
	#[serde(rename = "name", skip_serializing_if = "Option::is_none")]
	pub name: Option<String>,
	#[serde(rename = "collection", skip_serializing_if = "Option::is_none")]
	pub collection: Option<Box<models::VersionsCollection>>,
	/// The item the Content Version is created on.
	#[serde(rename = "item", skip_serializing_if = "Option::is_none")]
	pub item: Option<String>,
	#[serde(
		rename = "hash",
		default,
		with = "::serde_with::rust::double_option",
		skip_serializing_if = "Option::is_none"
	)]
	pub hash: Option<Option<String>>,
	/// When the Content Version was created.
	#[serde(
		rename = "date_created",
		default,
		with = "::serde_with::rust::double_option",
		skip_serializing_if = "Option::is_none"
	)]
	pub date_created: Option<Option<String>>,
	/// When the Content Version was last updated.
	#[serde(
		rename = "date_updated",
		default,
		with = "::serde_with::rust::double_option",
		skip_serializing_if = "Option::is_none"
	)]
	pub date_updated: Option<Option<String>>,
	#[serde(rename = "user_created", skip_serializing_if = "Option::is_none")]
	pub user_created: Option<Box<models::VersionsUserCreated>>,
	#[serde(rename = "user_updated", skip_serializing_if = "Option::is_none")]
	pub user_updated: Option<Box<models::VersionsUserUpdated>>,
	/// The current changes compared to the main version of the item.
	#[serde(rename = "delta", skip_serializing_if = "Option::is_none")]
	pub delta: Option<json::Value>,
}

impl Versions {
	pub fn new() -> Versions {
		Versions {
			id: None,
			key: None,
			name: None,
			collection: None,
			item: None,
			hash: None,
			date_created: None,
			date_updated: None,
			user_created: None,
			user_updated: None,
			delta: None,
		}
	}
}
