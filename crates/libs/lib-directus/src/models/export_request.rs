/*
 * Dynamic API Specification
 *
 * This is a dynamically generated API specification for all endpoints existing on the current project.
 *
 * The version of the OpenAPI document: 11.2.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ExportRequest {
    /// What file format to save the export to. One of csv, xml, json
    #[serde(rename = "format")]
    pub format: Format,
    #[serde(rename = "query")]
    pub query: Box<models::Query>,
    #[serde(rename = "file")]
    pub file: Box<models::Files>,
}

impl ExportRequest {
    pub fn new(format: Format, query: models::Query, file: models::Files) -> ExportRequest {
        ExportRequest {
            format,
            query: Box::new(query),
            file: Box::new(file),
        }
    }
}
/// What file format to save the export to. One of csv, xml, json
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Format {
    #[serde(rename = "csv")]
    Csv,
    #[serde(rename = "xml")]
    Xml,
    #[serde(rename = "json")]
    Json,
}

impl Default for Format {
    fn default() -> Format {
        Self::Csv
    }
}

