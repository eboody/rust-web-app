/*
 * Dynamic API Specification
 *
 * This is a dynamically generated API specification for all endpoints existing on the current project.
 *
 * The version of the OpenAPI document: 11.2.2
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UpdateFieldRequest {
	/// Unique name of the field. Field name is unique within the collection.
	#[serde(rename = "field", skip_serializing_if = "Option::is_none")]
	pub field: Option<String>,
	/// Directus specific data type. Used to cast values in the API.
	#[serde(rename = "type", skip_serializing_if = "Option::is_none")]
	pub r#type: Option<String>,
	#[serde(rename = "schema", skip_serializing_if = "Option::is_none")]
	pub schema: Option<Box<models::CreateFieldRequestSchema>>,
	#[serde(
		rename = "meta",
		default,
		with = "::serde_with::rust::double_option",
		skip_serializing_if = "Option::is_none"
	)]
	pub meta: Option<Option<Box<models::CreateFieldRequestMeta>>>,
}

impl UpdateFieldRequest {
	pub fn new() -> UpdateFieldRequest {
		UpdateFieldRequest {
			field: None,
			r#type: None,
			schema: None,
			meta: None,
		}
	}
}
