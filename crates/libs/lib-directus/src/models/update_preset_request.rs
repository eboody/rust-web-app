/*
 * Dynamic API Specification
 *
 * This is a dynamically generated API specification for all endpoints existing on the current project.
 *
 * The version of the OpenAPI document: 11.2.2
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UpdatePresetRequest {
	/// What collection this collection preset is used for.
	#[serde(rename = "collection")]
	pub collection: String,
	/// Name for the bookmark. If this is set, the collection preset will be considered to be a bookmark.
	#[serde(rename = "title", skip_serializing_if = "Option::is_none")]
	pub title: Option<String>,
	/// The unique identifier of a role in the platform. If user is null, this will be used to apply the collection preset or bookmark for all users in the role.
	#[serde(rename = "role", skip_serializing_if = "Option::is_none")]
	pub role: Option<i32>,
	/// What the user searched for in search/filter in the header bar.
	#[serde(rename = "search_query", skip_serializing_if = "Option::is_none")]
	pub search_query: Option<String>,
	#[serde(rename = "filters", skip_serializing_if = "Option::is_none")]
	pub filters: Option<Vec<models::UpdatePresetRequestFiltersInner>>,
	/// Name of the view type that is used. Defaults to tabular.
	#[serde(rename = "view_type", skip_serializing_if = "Option::is_none")]
	pub view_type: Option<String>,
	/// View query that's saved per view type. Controls what data is fetched on load. These follow the same format as the JS SDK parameters.
	#[serde(rename = "view_query", skip_serializing_if = "Option::is_none")]
	pub view_query: Option<String>,
	/// Options of the views. The properties in here are controlled by the layout.
	#[serde(rename = "view_options", skip_serializing_if = "Option::is_none")]
	pub view_options: Option<String>,
	/// Key value pair of language-translation. Can be used to translate the bookmark title in multiple languages.
	#[serde(rename = "translation", skip_serializing_if = "Option::is_none")]
	pub translation: Option<serde_json::Value>,
}

impl UpdatePresetRequest {
	pub fn new(collection: String) -> UpdatePresetRequest {
		UpdatePresetRequest {
			collection,
			title: None,
			role: None,
			search_query: None,
			filters: None,
			view_type: None,
			view_query: None,
			view_options: None,
			translation: None,
		}
	}
}
