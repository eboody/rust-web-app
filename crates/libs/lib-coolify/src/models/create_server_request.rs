/*
 * Coolify
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateServerRequest {
    /// The name of the server.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The description of the server.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// The IP of the server.
    #[serde(rename = "ip", skip_serializing_if = "Option::is_none")]
    pub ip: Option<String>,
    /// The port of the server.
    #[serde(rename = "port", skip_serializing_if = "Option::is_none")]
    pub port: Option<i32>,
    /// The user of the server.
    #[serde(rename = "user", skip_serializing_if = "Option::is_none")]
    pub user: Option<String>,
    /// The UUID of the private key.
    #[serde(rename = "private_key_uuid", skip_serializing_if = "Option::is_none")]
    pub private_key_uuid: Option<String>,
    /// Is build server.
    #[serde(rename = "is_build_server", skip_serializing_if = "Option::is_none")]
    pub is_build_server: Option<bool>,
    /// Instant validate.
    #[serde(rename = "instant_validate", skip_serializing_if = "Option::is_none")]
    pub instant_validate: Option<bool>,
    /// The proxy type.
    #[serde(rename = "proxy_type", skip_serializing_if = "Option::is_none")]
    pub proxy_type: Option<ProxyType>,
}

impl CreateServerRequest {
    pub fn new() -> CreateServerRequest {
        CreateServerRequest {
            name: None,
            description: None,
            ip: None,
            port: None,
            user: None,
            private_key_uuid: None,
            is_build_server: None,
            instant_validate: None,
            proxy_type: None,
        }
    }
}
/// The proxy type.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ProxyType {
    #[serde(rename = "traefik")]
    Traefik,
    #[serde(rename = "caddy")]
    Caddy,
    #[serde(rename = "none")]
    None,
}

impl Default for ProxyType {
    fn default() -> ProxyType {
        Self::Traefik
    }
}

