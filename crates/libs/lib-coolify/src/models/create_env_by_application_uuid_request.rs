/*
 * Coolify
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateEnvByApplicationUuidRequest {
    /// The key of the environment variable.
    #[serde(rename = "key", skip_serializing_if = "Option::is_none")]
    pub key: Option<String>,
    /// The value of the environment variable.
    #[serde(rename = "value", skip_serializing_if = "Option::is_none")]
    pub value: Option<String>,
    /// The flag to indicate if the environment variable is used in preview deployments.
    #[serde(rename = "is_preview", skip_serializing_if = "Option::is_none")]
    pub is_preview: Option<bool>,
    /// The flag to indicate if the environment variable is used in build time.
    #[serde(rename = "is_build_time", skip_serializing_if = "Option::is_none")]
    pub is_build_time: Option<bool>,
    /// The flag to indicate if the environment variable is a literal, nothing espaced.
    #[serde(rename = "is_literal", skip_serializing_if = "Option::is_none")]
    pub is_literal: Option<bool>,
    /// The flag to indicate if the environment variable is multiline.
    #[serde(rename = "is_multiline", skip_serializing_if = "Option::is_none")]
    pub is_multiline: Option<bool>,
    /// The flag to indicate if the environment variable's value is shown on the UI.
    #[serde(rename = "is_shown_once", skip_serializing_if = "Option::is_none")]
    pub is_shown_once: Option<bool>,
}

impl CreateEnvByApplicationUuidRequest {
    pub fn new() -> CreateEnvByApplicationUuidRequest {
        CreateEnvByApplicationUuidRequest {
            key: None,
            value: None,
            is_preview: None,
            is_build_time: None,
            is_literal: None,
            is_multiline: None,
            is_shown_once: None,
        }
    }
}

